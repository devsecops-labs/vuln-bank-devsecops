name: DevSecOps Pipeline - Newschool (Modern Tools)

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

permissions:
  contents: read
  security-events: write

jobs:
  # Modern SAST - CodeQL
  codeql_scan:
    name: SAST (CodeQL)
    runs-on: ubuntu-latest
    permissions:
      actions: read
      contents: read
      security-events: write
    steps:
      - uses: actions/checkout@v4

      - name: Initialize CodeQL
        uses: github/codeql-action/init@v3
        with:
          languages: python
          queries: security-and-quality

      - name: Autobuild
        uses: github/codeql-action/autobuild@v3

      - name: Perform CodeQL Analysis
        uses: github/codeql-action/analyze@v3
        with:
          category: "/language:python"

      - name: CodeQL Complete
        run: |
          echo "CodeQL analysis completed - results available in GitHub Security tab"

  # Modern SCA - Dependabot (GitHub Native)
  dependabot_scan:
    name: SCA (Dependabot)
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Dependabot Status
        run: |
          echo "Dependabot is configured via .github/dependabot.yml"
          echo "Dependency updates and security alerts are managed automatically by GitHub"
          echo "Results available in GitHub Security tab and Dependabot alerts"

  # Modern DAST - Nuclei
  nuclei_scan:
    name: DAST (Nuclei)
    runs-on: ubuntu-latest
    continue-on-error: true
    steps:
      - uses: actions/checkout@v4

      - name: Set Up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.9'

      - name: Install Dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Start and Verify Flask Application
        run: |
          chmod +x scripts/health_check.sh
          ./scripts/health_check.sh

      - name: Create Results Directory
        run: mkdir -p security-results/nuclei

      - name: Run Nuclei Scan
        id: nuclei_scan
        uses: projectdiscovery/nuclei-action@main
        with:
          target: http://localhost:5000
          output: security-results/nuclei/nuclei.log
          sarif-export: security-results/nuclei/nuclei.sarif

      - name: Verify Nuclei Results
        run: |
          if [ -s security-results/nuclei/nuclei.log ]; then
            echo "Nuclei scan completed successfully"
            # Convert log to JSON if needed
            if [ -s security-results/nuclei/nuclei.log ]; then
              echo "Nuclei results available in nuclei.log"
            fi
          else
            echo "No Nuclei issues found"
            echo '[]' > security-results/nuclei/nuclei-results.json
          fi

      - name: Upload SARIF to GitHub Security
        uses: github/codeql-action/upload-sarif@v3
        if: steps.nuclei_scan.outputs.sarif_exists == 'true'
        with:
          sarif_file: security-results/nuclei/nuclei.sarif
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Upload Nuclei Results
        uses: actions/upload-artifact@v4
        with:
          name: nuclei-results
          path: security-results/nuclei/
          retention-days: 90

  # Secrets Scanning - TruffleHog (Free Alternative)
  trufflehog_scan:
    name: Secrets Scanning (TruffleHog)
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Create Results Directory
        run: mkdir -p security-results/trufflehog

      - name: Run TruffleHog Scan
        run: |
          # Install TruffleHog
          curl -sSfL https://raw.githubusercontent.com/trufflesecurity/trufflehog/main/scripts/install.sh | sh -s -- -b /usr/local/bin
          
          # Run scan
          trufflehog filesystem . --json > security-results/trufflehog/trufflehog-results.json || true

      - name: Verify TruffleHog Results
        run: |
          if [ -s security-results/trufflehog/trufflehog-results.json ]; then
            echo "TruffleHog scan completed successfully"
          else
            echo "No secrets found"
            echo '[]' > security-results/trufflehog/trufflehog-results.json
          fi

      - name: Upload TruffleHog Results
        uses: actions/upload-artifact@v4
        with:
          name: trufflehog-results
          path: security-results/trufflehog/
          retention-days: 90

  # Modern Report Generation
  modern_report:
    name: Generate Modern Security Report
    needs: [codeql_scan, dependabot_scan, nuclei_scan, trufflehog_scan]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Create Results Directory
        run: mkdir -p security-results/{nuclei,trufflehog}

      - name: Download All Results
        run: |
          for tool in nuclei trufflehog; do
            echo "Downloading $tool results..."
            mkdir -p security-results/$tool
          done

      - name: Download Nuclei Results
        uses: actions/download-artifact@v4
        continue-on-error: true
        with:
          name: nuclei-results
          path: security-results/nuclei

      - name: Download TruffleHog Results
        uses: actions/download-artifact@v4
        continue-on-error: true
        with:
          name: trufflehog-results
          path: security-results/trufflehog

      - name: Install jq
        run: sudo apt-get install -y jq

      - name: Generate Modern HTML Report
        run: |
          # Create a function to format JSON content
          format_json() {
            if [ -f "$1" ]; then
              cat "$1" | jq -r '.' || echo "Invalid JSON format"
            else
              echo "No results available"
            fi
          }

          # Generate the modern report
          cat << EOF > security-results/modern-report.html
          <!DOCTYPE html>
          <html>
          <head>
              <title>Modern Security Scan Results</title>
              <style>
                  body { font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif; margin: 20px; background: #f5f5f5; }
                  .header { background: linear-gradient(135deg, #667eea 0%, #764ba2 100%); color: white; padding: 20px; border-radius: 10px; margin-bottom: 20px; }
                  .tool-section { margin-bottom: 30px; padding: 20px; border: 1px solid #ddd; background: white; border-radius: 8px; box-shadow: 0 2px 4px rgba(0,0,0,0.1); }
                  .tool-title { color: #333; border-bottom: 2px solid #667eea; padding-bottom: 10px; }
                  .vulnerability-item { margin: 10px 0; padding: 15px; background-color: #f9f9f9; border-radius: 5px; border-left: 4px solid #667eea; }
                  .severity-critical { color: #dc3545; font-weight: bold; }
                  .severity-high { color: #fd7e14; }
                  .severity-medium { color: #ffc107; }
                  .severity-low { color: #28a745; }
                  .modern-badge { background: #28a745; color: white; padding: 4px 8px; border-radius: 4px; font-size: 12px; }
              </style>
          </head>
          <body>
              <div class="header">
                  <h1>üöÄ Modern Security Scan Results</h1>
                  <p>Next-generation security tools for comprehensive vulnerability detection</p>
              </div>
              
              <div class="tool-section">
                  <h2 class="tool-title">üîç CodeQL Analysis <span class="modern-badge">GitHub Native</span></h2>
                  <p>‚úÖ Results available in GitHub Security tab</p>
              </div>
              
              <div class="tool-section">
                  <h2 class="tool-title">üì¶ Dependabot SCA <span class="modern-badge">GitHub Native</span></h2>
                  <p>‚úÖ Results available in GitHub Security tab</p>
              </div>
              
              <div class="tool-section">
                  <h2 class="tool-title">üéØ Nuclei Results <span class="modern-badge">Modern DAST</span></h2>
                  <pre>
          $(cat security-results/nuclei/nuclei.log 2>/dev/null || echo "No Nuclei results available")
                  </pre>
              </div>
              
              <div class="tool-section">
                  <h2 class="tool-title">üîê TruffleHog Results <span class="modern-badge">Secrets Hunter</span></h2>
                  <pre>
          $(format_json "security-results/trufflehog/trufflehog-results.json")
                  </pre>
              </div>
          </body>
          </html>
          EOF

      - name: Upload Modern Report
        uses: actions/upload-artifact@v4
        with:
          name: modern-security-report
          path: security-results/modern-report.html
          retention-days: 90
