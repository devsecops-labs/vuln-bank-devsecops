name: DevSecOps Pipeline - Newschool (Modern Tools)

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

permissions:
  contents: read
  security-events: write

jobs:
  # Modern SAST - CodeQL
  codeql_scan:
    name: SAST (CodeQL)
    runs-on: ubuntu-latest
    permissions:
      actions: read
      contents: read
      security-events: write
    steps:
      - uses: actions/checkout@v5

      - name: Initialize CodeQL
        uses: github/codeql-action/init@v3
        with:
          languages: python
          queries: security-and-quality

      - name: Autobuild
        uses: github/codeql-action/autobuild@v3

      - name: Perform CodeQL Analysis
        uses: github/codeql-action/analyze@v3
        with:
          category: "/language:python"

      - name: CodeQL Complete
        run: |
          echo "CodeQL analysis completed - results available in GitHub Security tab"

  # Modern SCA - Dependabot (GitHub Native)
  dependabot_scan:
    name: SCA (Dependabot)
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v5

      - name: Dependabot Status
        run: |
          echo "Dependabot is configured via .github/dependabot.yml"
          echo "Dependency updates and security alerts are managed automatically by GitHub"
          echo "Results available in GitHub Security tab and Dependabot alerts"

  # Modern DAST - Nuclei
  nuclei_scan:
    name: DAST (Nuclei)
    runs-on: ubuntu-latest
    continue-on-error: true
    steps:
      - uses: actions/checkout@v5

      - name: Set Up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.9'

      - name: Install Dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Start and Verify Flask Application
        run: |
          chmod +x scripts/health_check.sh
          ./scripts/health_check.sh

      - name: Create Results Directory
        run: mkdir -p security-results/nuclei

      - name: Run Nuclei Scan
        id: nuclei_scan
        uses: projectdiscovery/nuclei-action@main
        with:
          target: http://localhost:5000
          output: security-results/nuclei/nuclei.log
          sarif-export: security-results/nuclei/nuclei.sarif

      - name: Verify Nuclei Results
        run: |
          if [ -s security-results/nuclei/nuclei.log ]; then
            echo "Nuclei scan completed successfully"
            # Convert log to JSON if needed
            if [ -s security-results/nuclei/nuclei.log ]; then
              echo "Nuclei results available in nuclei.log"
            fi
          else
            echo "No Nuclei issues found"
            echo '[]' > security-results/nuclei/nuclei-results.json
          fi

      - name: Upload SARIF to GitHub Security
        uses: github/codeql-action/upload-sarif@v3
        if: steps.nuclei_scan.outputs.sarif_exists == 'true'
        with:
          sarif_file: security-results/nuclei/nuclei.sarif
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Upload Nuclei Results
        uses: actions/upload-artifact@v4
        with:
          name: nuclei-results
          path: security-results/nuclei/
          retention-days: 90

  # Secrets Scanning - TruffleHog
  trufflehog_scan:
    name: Secrets Scanning (TruffleHog)
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v5
        with:
          fetch-depth: 0

      - name: Create Results Directory
        run: mkdir -p security-results/trufflehog

      - name: Run TruffleHog Scan
        run: |
          # Install TruffleHog
          curl -sSfL https://raw.githubusercontent.com/trufflesecurity/trufflehog/main/scripts/install.sh | sh -s -- -b /usr/local/bin
          
          # Run scan
          trufflehog filesystem . --json > security-results/trufflehog/trufflehog-results.json || true

      - name: Verify TruffleHog Results
        run: |
          if [ -s security-results/trufflehog/trufflehog-results.json ]; then
            echo "TruffleHog scan completed successfully"
          else
            echo "No secrets found"
            echo '[]' > security-results/trufflehog/trufflehog-results.json
          fi

      - name: Upload TruffleHog Results
        uses: actions/upload-artifact@v4
        with:
          name: trufflehog-results
          path: security-results/trufflehog/
          retention-days: 90